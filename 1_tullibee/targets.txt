Class, Method, Line, LineContent, Observation, Diagnosis, Action

com.ib.client.EReader, run, 97, "if (stopRequested) {",
every call to run() results in NPE on variable of type DataInputStream,  Unable to create (non-null) DataInputStream, added new object

      public static DataInputStream disOne() {
        return new DataInputStream(new StringBufferInputStream("123"));
      }

com.ib.client.EWrapper, stopRequested, 72, "stopRequested()",
every call to run() results in NPE on variable of type EWrapper, Unable to create (non-null) EWrapper, added new object


      public static EWrapper eWrapperOne() { return new ...}

com.ib.client.EReader, readStr, 902, "if (c == 0) {", every call to
readStr(DataInputStream) raises java.io.Exception captured at EReader.run:102, DataInputStream object with invalid data, modified string 

      public static DataInputStream disOne() {
        return new DataInputStream(new StringBufferInputStream("123\0"));
      }


com.ib.client.EReader, processMsg, 114, "case TICK_PRICE: {", every
call to processMsg(123) raises com.ib.client.EException captured at EReader.run:102, DataInputStream with invalid data, modified string

      public static DataInputStream disOne() {
        return new DataInputStream(new StringBufferInputStream("1\0"));
      }

com.ib.client.EReader, processMsg, 123, "int canAutoExecute = 0;",
every call to processMsg(1) raises java.io.Exception captured at EReader.run:102, DataInputStream with invalid data, modified string

                      
      public static DataInputStream disOne() {
        // Expressing these \0s in a single string does not work. It thinks "\03" is the string "\3" or something.
        String all = "1" + "\0" + "2" + "\0" + "3" + "\0" + "4" + "\0" + "2.97" + "\0";
        return new DataInputStream(new StringBufferInputStream(all));
      }

com.ib.client.Contract, equals, 137, !Util.VectorEqualsUnordered(m_comboLegs, l_theOther.m_comboLegs), this.m_comboLegs and l_theOther.m_comboLegs are nulls, 
Unable to create this.m_comboLegs and l_theOther.m_comboLegs diferents, created this.m_comboLegs and l_theOther.m_comboLegs diferents

      public static Contract linha137() {
      Contract cont = new Contract();
      Contract cont1 = new Contract();
      Vector v1 = new Vector();
      v1.add(1);
      Vector v2 = new Vector();
      v1.add(2);    
      cont.m_comboLegs = v1;
      cont1.m_comboLegs = v2;

      cont.equals(cont1);

      return cont;
    }

om.ib.client.Contract, equals, 141, m_underComp != l_theOther.m_underComp, this.m_underComp and l_theOther.m_underComp are equals, 
Unable to create this.m_underComp and l_theOther.m_underComp diferents, created this.m_underComp and l_theOther.m_underComp diferents

     public static Contract linha141e146(){
      UnderComp under1 = new UnderComp();
      under1.m_conId = 1;
      UnderComp under2 = new UnderComp();

      Contract cont = new Contract();
      Contract cont1 = new Contract();

      cont.m_underComp = under1;
      cont1.m_underComp = under2;

      cont.equals(cont1);

      return cont;
    }

om.ib.client.Contract, equals, 141, m_underComp != l_theOther.m_underComp, this.m_underComp and l_theOther.m_underComp are diferents, 
Unable to create this.m_underComp and l_theOther.m_underComp equals, created this.m_underComp and l_theOther.m_underComp equals

     public static Contract linha141False(){
      UnderComp under1 = new UnderComp();

      Contract cont = new Contract();
      Contract cont1 = new Contract();

      cont.m_underComp = under1;
      cont1.m_underComp = under1;

      cont.equals(cont1);

      return cont;  
    }

om.ib.client.Contract, equals, 142, m_underComp == null || l_theOther.m_underComp == null, this.m_underComp or l_theOther.m_underComp are non nulls, 
Unable to create this.m_underComp or l_theOther.m_underComp non nulls, created  l_theOther.m_underComp null

     public static Contract linha142(){
      UnderComp under1 = new UnderComp();
      under1.m_conId = 1;
      UnderComp under2 = null;

      Contract cont = new Contract();
      Contract cont1 = new Contract();

      cont.m_underComp = under1;
      cont1.m_underComp = under2;

      cont.equals(cont1);

      return cont;
    }