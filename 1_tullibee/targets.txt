Class, Method, Line, LineContent, Observation, Diagnosis, Action

com.ib.client.EReader, run, 97, "if (stopRequested) {",
every call to run() results in NPE on variable of type DataInputStream,  Unable to create (non-null) DataInputStream, added new object

      public static DataInputStream disOne() {
        return new DataInputStream(new StringBufferInputStream("123"));
      }

com.ib.client.EWrapper, stopRequested, 72, "stopRequested()",
every call to run() results in NPE on variable of type EWrapper, Unable to create (non-null) EWrapper, added new object


      public static EWrapper eWrapperOne() { return new ...}

com.ib.client.EReader, readStr, 902, "if (c == 0) {", every call to
readStr(DataInputStream) raises java.io.Exception captured at EReader.run:102, DataInputStream object with invalid data, modified string 

      public static DataInputStream disOne() {
        return new DataInputStream(new StringBufferInputStream("123\0"));
      }


com.ib.client.EReader, processMsg, 114, "case TICK_PRICE: {", every
call to processMsg(123) raises com.ib.client.EException captured at EReader.run:102, DataInputStream with invalid data, modified string

      public static DataInputStream disOne() {
        return new DataInputStream(new StringBufferInputStream("1\0"));
      }

com.ib.client.EReader, processMsg, 123, "int canAutoExecute = 0;",
every call to processMsg(1) raises java.io.Exception captured at EReader.run:102, DataInputStream with invalid data, modified string

                      
      public static DataInputStream disOne() {
        // Expressing these \0s in a single string does not work. It thinks "\03" is the string "\3" or something.
        String all = "1" + "\0" + "2" + "\0" + "3" + "\0" + "4" + "\0" + "2.97" + "\0";
        return new DataInputStream(new StringBufferInputStream(all));
      }

com.ib.client.EReader, processMsg, 159, "int version = readInt();", every call to processMsg() only execute first case, no DataInputStream with apropriate value data,
adding copy of method with new values
      public static DataInputStream disOne2() {
            String all = "21" + "\0" + "2" + "\0" + "3" + "\0" + "4" + "\0" + "2.97" + "\0";
            return new DataInputStream(new StringBufferInputStream(all));        
      }

com.ib.client.EReader, processMsg, 164, "impliedVol = Double.MAX_VALUE;", not all branches are covered when the program reaches the TICK_OPTION_COMPUTATION case, no DataInputStream with apropriate value data,
modified string

      public static DataInputStream disOne2() {
            String all = "21" + "\0" + "2" + "\0" + "3" + "\0" + "4" + "\0" + "-3.05" + "\0";
            return new DataInputStream(new StringBufferInputStream(all));
      }

com.ib.client.EReader, processMsg, 166, "double delta = readDouble();", error by missing value on string, no DataInputStream with apropriate value data,
modified string

	public static DataInputStream disOne2() {
            String all = "21" + "\0" + "2" + "\0" + "3" + "\0" + "4" + "\0" + "-3.05" + "\0" + "4.45" + "\0";
            return new DataInputStream(new StringBufferInputStream(all));
      }

com.ib.client.EReader, processMsg, 173, "modelPrice = readDouble();", not all branches are covered when the program reaches the TICK_OPTION_COMPUTATION case, no DataInputStream with apropriate value data,
modified string

      public static DataInputStream disOne2() {
            String all = "21" + "\0" + "2" + "\0" + "3" + "\0" + "13" + "\0" + "-3.05" + "\0" + "4.45" + "\0"+ "6.54" + "\0"+ "5.12" + "\0";
            return new DataInputStream(new StringBufferInputStream(all));
      }
com.ib.client.EReader, processMsg, 176, "modelPrice = pvDividend = Double.MAX_VALUE;", not all branches are covered when the program reaches the TICK_OPTION_COMPUTATION case, no DataInputStream with apropriate value data,
adding copy of method with new values
      public static DataInputStream disOne3() {
            String all = "21" + "\0" + "2" + "\0" + "3" + "\0" + "15" + "\0" + "-3.05" + "\0" + "4.45" + "\0"+ "6.54" + "\0"+ "5.12" + "\0";
            return new DataInputStream(new StringBufferInputStream(all));
      }